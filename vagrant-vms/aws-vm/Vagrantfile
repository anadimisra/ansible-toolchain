# -*- mode: ruby -*-
# vi: set ft=ruby :
# Require vagrant-aws plugin to continue
unless Vagrant.has_plugin?("vagrant-aws")
	raise 'vagrant-aws plugin is not installed!'
end

Vagrant.configure("2") do |config|
	# base box to use for aws
	config.vm.box = "dummy"
	config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

	config.vm.define "dockerhost1"
	# virtualbox customizaations and settings
	config.vm.provider :aws do |aws, override|
		aws.access_key_id = ENV['AWS_ACCESS_KEY']
		aws.secret_access_key = ENV['AWS_SECRET_KEY']
		aws.ami = "ami-5f3d4d30" # ubuntu 16.04 for ap-south-1
		aws.region = ENV['AWS_DEFAULT_REGION']
		aws.instance_type = "t2.micro"
		aws.keypair_name = ENV['AWS_KEYPAIR_NAME']
		aws.security_groups = ENV['AWS_SECURITYGROUP']
		override.ssh.username = "ubuntu"
		override.ssh.private_key_path = ENV['AWS_KEYPAIR_LOC']
	end

	# provisioning: only python required
	config.vm.provision "shell", inline: <<-SHELL
		apt-get update -qqy
		apt-get install python -y > /dev/null 2>&1
	SHELL

	config.vm.provision "ansible" do |ansible|

		# add created machines to groups
		# your groups need to match the groups specified in playbook
		ansible.groups = {
			"dockerhost" => ['dockerhost1']
		}
		# auto install roles
		ansible.galaxy_role_file = "../../requirements.yml"
		ansible.galaxy_roles_path = "../../roles/"

		# run playbook!
		ansible.playbook = "../../playbook.yml"
		ansible.verbose = "vvv"
	end
	end
